{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport { useContextKey } from \"../Route\";\nimport { useSortedScreens } from \"../useScreens\";\nimport { Screen } from \"../views/Screen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useFilterScreenChildren(children) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    isCustomNavigator = _ref.isCustomNavigator,\n    contextKey = _ref.contextKey;\n  return React.useMemo(function () {\n    var customChildren = [];\n    var screens = React.Children.map(children, function (child) {\n      if (React.isValidElement(child) && child && child.type === Screen) {\n        if (!child.props.name) {\n          throw new Error(`<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must have a \\`name\\` prop when used as a child of a Layout Route.`);\n        }\n        if (process.env.NODE_ENV !== \"production\") {\n          if ([\"children\", \"component\", \"getComponent\"].some(function (key) {\n            return key in child.props;\n          })) {\n            throw new Error(`<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must not have a \\`children\\`, \\`component\\`, or \\`getComponent\\` prop when used as a child of a Layout Route`);\n          }\n        }\n        return child.props;\n      } else {\n        if (isCustomNavigator) {\n          customChildren.push(child);\n        } else {\n          console.warn(`Layout children must be of type Screen, all other children are ignored. To use custom children, create a custom <Layout />. Update Layout Route at: \"app${contextKey}/_layout\"`);\n        }\n      }\n    });\n    if (process.env.NODE_ENV !== \"production\") {\n      var names = screens == null ? void 0 : screens.map(function (screen) {\n        return screen.name;\n      });\n      if (names && new Set(names).size !== names.length) {\n        throw new Error(\"Screen names must be unique: \" + names);\n      }\n    }\n    return {\n      screens: screens,\n      children: customChildren\n    };\n  }, [children]);\n}\nexport function withLayoutContext(Nav, processor) {\n  var Navigator = React.forwardRef(function (_ref2, ref) {\n    var userDefinedChildren = _ref2.children,\n      props = _objectWithoutProperties(_ref2, _excluded);\n    var contextKey = useContextKey();\n    var _useFilterScreenChild = useFilterScreenChildren(userDefinedChildren, {\n        contextKey: contextKey\n      }),\n      screens = _useFilterScreenChild.screens;\n    var processed = processor ? processor(screens != null ? screens : []) : screens;\n    var sorted = useSortedScreens(processed != null ? processed : []);\n    if (!sorted.length) {\n      return null;\n    }\n    return _jsx(Nav, _objectSpread(_objectSpread({}, props), {}, {\n      id: contextKey,\n      ref: ref,\n      children: sorted\n    }));\n  });\n  Navigator.Screen = Screen;\n  return Navigator;\n}","map":{"version":3,"names":["React","useContextKey","useSortedScreens","Screen","jsx","_jsx","useFilterScreenChildren","children","_ref","arguments","length","undefined","isCustomNavigator","contextKey","useMemo","customChildren","screens","Children","map","child","isValidElement","type","props","name","Error","process","env","NODE_ENV","some","key","push","console","warn","names","screen","Set","size","withLayoutContext","Nav","processor","Navigator","forwardRef","_ref2","ref","userDefinedChildren","_objectWithoutProperties","_excluded","_useFilterScreenChild","processed","sorted","_objectSpread","id"],"sources":["C:/Users/acer/Documents/GitHub/collectify-front-end/node_modules/expo-router/src/layouts/withLayoutContext.tsx"],"sourcesContent":["import { EventMapBase, NavigationState } from \"@react-navigation/native\";\r\nimport React from \"react\";\r\n\r\nimport { useContextKey } from \"../Route\";\r\nimport { PickPartial } from \"../types\";\r\nimport { useSortedScreens, ScreenProps } from \"../useScreens\";\r\nimport { Screen } from \"../views/Screen\";\r\n\r\nexport function useFilterScreenChildren(\r\n  children: React.ReactNode,\r\n  {\r\n    isCustomNavigator,\r\n    contextKey,\r\n  }: {\r\n    isCustomNavigator?: boolean;\r\n    /** Used for sending developer hints */\r\n    contextKey?: string;\r\n  } = {}\r\n) {\r\n  return React.useMemo(() => {\r\n    const customChildren: any[] = [];\r\n    const screens = React.Children.map(children, (child) => {\r\n      if (React.isValidElement(child) && child && child.type === Screen) {\r\n        if (!child.props.name) {\r\n          throw new Error(\r\n            `<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must have a \\`name\\` prop when used as a child of a Layout Route.`\r\n          );\r\n        }\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n          if (\r\n            [\"children\", \"component\", \"getComponent\"].some(\r\n              (key) => key in child.props\r\n            )\r\n          ) {\r\n            throw new Error(\r\n              `<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must not have a \\`children\\`, \\`component\\`, or \\`getComponent\\` prop when used as a child of a Layout Route`\r\n            );\r\n          }\r\n        }\r\n        return child.props;\r\n      } else {\r\n        if (isCustomNavigator) {\r\n          customChildren.push(child);\r\n        } else {\r\n          console.warn(\r\n            `Layout children must be of type Screen, all other children are ignored. To use custom children, create a custom <Layout />. Update Layout Route at: \"app${contextKey}/_layout\"`\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    // Add an assertion for development\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n      // Assert if names are not unique\r\n      const names = screens?.map((screen) => screen.name);\r\n      if (names && new Set(names).size !== names.length) {\r\n        throw new Error(\"Screen names must be unique: \" + names);\r\n      }\r\n    }\r\n\r\n    return {\r\n      screens,\r\n      children: customChildren,\r\n    };\r\n  }, [children]);\r\n}\r\n\r\n/** Return a navigator that automatically injects matched routes and renders nothing when there are no children. Return type with children prop optional */\r\nexport function withLayoutContext<\r\n  TOptions extends object,\r\n  T extends React.ComponentType<any>,\r\n  State extends NavigationState,\r\n  EventMap extends EventMapBase\r\n>(\r\n  Nav: T,\r\n  processor?: (\r\n    options: ScreenProps<TOptions, State, EventMap>[]\r\n  ) => ScreenProps<TOptions, State, EventMap>[]\r\n): React.ForwardRefExoticComponent<\r\n  React.PropsWithoutRef<PickPartial<React.ComponentProps<T>, \"children\">> &\r\n    React.RefAttributes<unknown>\r\n> & {\r\n  Screen: (props: ScreenProps<TOptions, State, EventMap>) => null;\r\n} {\r\n  const Navigator = React.forwardRef(\r\n    (\r\n      {\r\n        children: userDefinedChildren,\r\n        ...props\r\n      }: PickPartial<React.ComponentProps<T>, \"children\">,\r\n      ref\r\n    ) => {\r\n      const contextKey = useContextKey();\r\n\r\n      const { screens } = useFilterScreenChildren(userDefinedChildren, {\r\n        contextKey,\r\n      });\r\n\r\n      const processed = processor ? processor(screens ?? []) : screens;\r\n\r\n      const sorted = useSortedScreens(processed ?? []);\r\n\r\n      // Prevent throwing an error when there are no screens.\r\n      if (!sorted.length) {\r\n        return null;\r\n      }\r\n\r\n      return (\r\n        // @ts-expect-error\r\n        <Nav {...props} id={contextKey} ref={ref} children={sorted} />\r\n      );\r\n    }\r\n  );\r\n\r\n  // @ts-expect-error\r\n  Navigator.Screen = Screen;\r\n  // @ts-expect-error\r\n  return Navigator;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}