{"ast":null,"code":"import { useNavigation as useUpstreamNavigation } from \"@react-navigation/native\";\nimport React from \"react\";\nimport { useContextKey } from \"./Route\";\nimport { getNameFromFilePath } from \"./matchers\";\nexport function useNavigation(parent) {\n  var navigation = useUpstreamNavigation();\n  var contextKey = useContextKey();\n  var normalizedParent = React.useMemo(function () {\n    if (!parent) {\n      return null;\n    }\n    var normalized = getNameFromFilePath(parent);\n    if (parent.startsWith(\".\")) {\n      return relativePaths(contextKey, parent);\n    }\n    return normalized;\n  }, [contextKey, parent]);\n  if (normalizedParent != null) {\n    var parentNavigation = navigation.getParent(normalizedParent);\n    if (!parentNavigation) {\n      throw new Error(`Could not find parent navigation with route \"${parent}\".` + (normalizedParent !== parent ? ` (normalized: ${normalizedParent})` : \"\"));\n    }\n    return parentNavigation;\n  }\n  return navigation;\n}\nexport function resolveParentId(contextKey, parentId) {\n  if (!parentId) {\n    return null;\n  }\n  if (parentId.startsWith(\".\")) {\n    return getNameFromFilePath(relativePaths(contextKey, parentId));\n  }\n  return getNameFromFilePath(parentId);\n}\nfunction relativePaths(from, to) {\n  var fromParts = from.split(\"/\").filter(Boolean);\n  var toParts = to.split(\"/\").filter(Boolean);\n  for (var part of toParts) {\n    if (part === \"..\") {\n      if (fromParts.length === 0) {\n        throw new Error(`Cannot resolve path \"${to}\" relative to \"${from}\"`);\n      }\n      fromParts.pop();\n    } else if (part === \".\") {} else {\n      fromParts.push(part);\n    }\n  }\n  return \"/\" + fromParts.join(\"/\");\n}","map":{"version":3,"names":["useNavigation","useUpstreamNavigation","React","useContextKey","getNameFromFilePath","parent","navigation","contextKey","normalizedParent","useMemo","normalized","startsWith","relativePaths","parentNavigation","getParent","Error","resolveParentId","parentId","from","to","fromParts","split","filter","Boolean","toParts","part","length","pop","push","join"],"sources":["C:/Users/acer/Documents/GitHub/collectify-front-end/node_modules/expo-router/src/useNavigation.ts"],"sourcesContent":["import {\r\n  useNavigation as useUpstreamNavigation,\r\n  NavigationProp,\r\n} from \"@react-navigation/native\";\r\nimport React from \"react\";\r\n\r\nimport { useContextKey } from \"./Route\";\r\nimport { getNameFromFilePath } from \"./matchers\";\r\n\r\n/**\r\n * Return the navigation object for the current route.\r\n * @param parent Provide an absolute path like `/(root)` to the parent route or a relative path like `../../` to the parent route.\r\n * @returns the navigation object for the provided route.\r\n */\r\nexport function useNavigation<\r\n  T = NavigationProp<ReactNavigation.RootParamList>\r\n>(parent?: string): T {\r\n  const navigation = useUpstreamNavigation<any>();\r\n\r\n  const contextKey = useContextKey();\r\n  const normalizedParent = React.useMemo(() => {\r\n    if (!parent) {\r\n      return null;\r\n    }\r\n    const normalized = getNameFromFilePath(parent);\r\n\r\n    if (parent.startsWith(\".\")) {\r\n      return relativePaths(contextKey, parent);\r\n    }\r\n    return normalized;\r\n  }, [contextKey, parent]);\r\n\r\n  if (normalizedParent != null) {\r\n    const parentNavigation = navigation.getParent(normalizedParent);\r\n\r\n    // TODO: Maybe print a list of parents...\r\n\r\n    if (!parentNavigation) {\r\n      throw new Error(\r\n        `Could not find parent navigation with route \"${parent}\".` +\r\n          (normalizedParent !== parent\r\n            ? ` (normalized: ${normalizedParent})`\r\n            : \"\")\r\n      );\r\n    }\r\n    return parentNavigation;\r\n  }\r\n  return navigation;\r\n}\r\n\r\nexport function resolveParentId(\r\n  contextKey: string,\r\n  parentId?: string | null\r\n): string | null {\r\n  if (!parentId) {\r\n    return null;\r\n  }\r\n\r\n  if (parentId.startsWith(\".\")) {\r\n    return getNameFromFilePath(relativePaths(contextKey, parentId));\r\n  }\r\n  return getNameFromFilePath(parentId);\r\n}\r\n\r\n// Resolve a path like `../` relative to a path like `/foo/bar`\r\nfunction relativePaths(from: string, to: string): string {\r\n  const fromParts = from.split(\"/\").filter(Boolean);\r\n  const toParts = to.split(\"/\").filter(Boolean);\r\n\r\n  for (const part of toParts) {\r\n    if (part === \"..\") {\r\n      if (fromParts.length === 0) {\r\n        throw new Error(`Cannot resolve path \"${to}\" relative to \"${from}\"`);\r\n      }\r\n      fromParts.pop();\r\n    } else if (part === \".\") {\r\n      // Ignore\r\n    } else {\r\n      fromParts.push(part);\r\n    }\r\n  }\r\n\r\n  return \"/\" + fromParts.join(\"/\");\r\n}\r\n"],"mappings":"AAAA,SACEA,aAAa,IAAIC,qBAAqB,QAEjC,0BAA0B;AACjC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,aAAa;AACtB,SAASC,mBAAmB;AAO5B,OAAO,SAASJ,aAAaA,CAE3BK,MAAe,EAAK;EACpB,IAAMC,UAAU,GAAGL,qBAAqB,CAAM,CAAC;EAE/C,IAAMM,UAAU,GAAGJ,aAAa,CAAC,CAAC;EAClC,IAAMK,gBAAgB,GAAGN,KAAK,CAACO,OAAO,CAAC,YAAM;IAC3C,IAAI,CAACJ,MAAM,EAAE;MACX,OAAO,IAAI;IACb;IACA,IAAMK,UAAU,GAAGN,mBAAmB,CAACC,MAAM,CAAC;IAE9C,IAAIA,MAAM,CAACM,UAAU,CAAC,GAAG,CAAC,EAAE;MAC1B,OAAOC,aAAa,CAACL,UAAU,EAAEF,MAAM,CAAC;IAC1C;IACA,OAAOK,UAAU;EACnB,CAAC,EAAE,CAACH,UAAU,EAAEF,MAAM,CAAC,CAAC;EAExB,IAAIG,gBAAgB,IAAI,IAAI,EAAE;IAC5B,IAAMK,gBAAgB,GAAGP,UAAU,CAACQ,SAAS,CAACN,gBAAgB,CAAC;IAI/D,IAAI,CAACK,gBAAgB,EAAE;MACrB,MAAM,IAAIE,KAAK,CACZ,gDAA+CV,MAAO,IAAG,IACvDG,gBAAgB,KAAKH,MAAM,GACvB,iBAAgBG,gBAAiB,GAAE,GACpC,EAAE,CACV,CAAC;IACH;IACA,OAAOK,gBAAgB;EACzB;EACA,OAAOP,UAAU;AACnB;AAEA,OAAO,SAASU,eAAeA,CAC7BT,UAAkB,EAClBU,QAAwB,EACT;EACf,IAAI,CAACA,QAAQ,EAAE;IACb,OAAO,IAAI;EACb;EAEA,IAAIA,QAAQ,CAACN,UAAU,CAAC,GAAG,CAAC,EAAE;IAC5B,OAAOP,mBAAmB,CAACQ,aAAa,CAACL,UAAU,EAAEU,QAAQ,CAAC,CAAC;EACjE;EACA,OAAOb,mBAAmB,CAACa,QAAQ,CAAC;AACtC;AAGA,SAASL,aAAaA,CAACM,IAAY,EAAEC,EAAU,EAAU;EACvD,IAAMC,SAAS,GAAGF,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;EACjD,IAAMC,OAAO,GAAGL,EAAE,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;EAE7C,KAAK,IAAME,IAAI,IAAID,OAAO,EAAE;IAC1B,IAAIC,IAAI,KAAK,IAAI,EAAE;MACjB,IAAIL,SAAS,CAACM,MAAM,KAAK,CAAC,EAAE;QAC1B,MAAM,IAAIX,KAAK,CAAE,wBAAuBI,EAAG,kBAAiBD,IAAK,GAAE,CAAC;MACtE;MACAE,SAAS,CAACO,GAAG,CAAC,CAAC;IACjB,CAAC,MAAM,IAAIF,IAAI,KAAK,GAAG,EAAE,CAEzB,CAAC,MAAM;MACLL,SAAS,CAACQ,IAAI,CAACH,IAAI,CAAC;IACtB;EACF;EAEA,OAAO,GAAG,GAAGL,SAAS,CAACS,IAAI,CAAC,GAAG,CAAC;AAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}