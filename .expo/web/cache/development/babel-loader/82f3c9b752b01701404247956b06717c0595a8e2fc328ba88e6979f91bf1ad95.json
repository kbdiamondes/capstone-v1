{"ast":null,"code":"import React from \"react\";\nimport { useDeprecated } from \"../useDeprecated\";\nimport { useNavigation } from \"../useNavigation\";\nvar useLayoutEffect = typeof window !== \"undefined\" ? React.useLayoutEffect : function () {};\nexport function Screen(_ref) {\n  var name = _ref.name,\n    redirect = _ref.redirect,\n    options = _ref.options;\n  var navigation = useNavigation(name);\n  useLayoutEffect(function () {\n    if (options && Object.keys(options).length) {\n      navigation.setOptions(options);\n    }\n  }, [navigation, options]);\n  if (process.env.NODE_ENV === \"development\") {\n    useDeprecated(\"The `redirect` prop on <Screen /> is deprecated and will be removed. Please use `router.redirect` instead\", redirect);\n  }\n  if (process.env.NODE_ENV !== \"production\") {\n    React.useEffect(function () {\n      if (redirect != null) {\n        throw new Error(\"Screen components should only use the `redirect` prop when nested directly inside a Layout component.\");\n      }\n    }, [name, redirect]);\n  }\n  return null;\n}","map":{"version":3,"names":["React","useDeprecated","useNavigation","useLayoutEffect","window","Screen","_ref","name","redirect","options","navigation","Object","keys","length","setOptions","process","env","NODE_ENV","useEffect","Error"],"sources":["C:/Users/User/Documents/GitHub/Capstone/collectify/collectify-front-end/node_modules/expo-router/src/views/Screen.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\nimport { useDeprecated } from \"../useDeprecated\";\r\nimport { useNavigation } from \"../useNavigation\";\r\n\r\nexport type ScreenProps<\r\n  TOptions extends Record<string, any> = Record<string, any>\r\n> = {\r\n  /**\r\n   * Name is required when used inside a Layout component.\r\n   *\r\n   * When used in a route, this can be an absolute path like `/(root)` to the parent route or a relative path like `../../` to the parent route.\r\n   * This should not be used inside of a Layout component.\r\n   * @example `/(root)` maps to a layout route `/app/(root).tsx`.\r\n   */\r\n  name?: string;\r\n\r\n  /** Should redirect away from this screen. */\r\n  redirect?: boolean;\r\n\r\n  initialParams?: { [key: string]: any };\r\n  options?: TOptions;\r\n};\r\n\r\nconst useLayoutEffect =\r\n  typeof window !== \"undefined\" ? React.useLayoutEffect : function () {};\r\n\r\n/** Component for setting the current screen's options dynamically. */\r\nexport function Screen<TOptions extends object = object>({\r\n  name,\r\n  redirect,\r\n  options,\r\n}: ScreenProps<TOptions>) {\r\n  const navigation = useNavigation(name);\r\n\r\n  useLayoutEffect(() => {\r\n    if (\r\n      options &&\r\n      // React Navigation will infinitely loop in some cases if an empty object is passed to setOptions.\r\n      // https://github.com/expo/router/issues/452\r\n      Object.keys(options).length\r\n    ) {\r\n      navigation.setOptions(options);\r\n    }\r\n  }, [navigation, options]);\r\n\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    useDeprecated(\r\n      \"The `redirect` prop on <Screen /> is deprecated and will be removed. Please use `router.redirect` instead\",\r\n      redirect\r\n    );\r\n  }\r\n\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    React.useEffect(() => {\r\n      if (redirect != null) {\r\n        throw new Error(\r\n          \"Screen components should only use the `redirect` prop when nested directly inside a Layout component.\"\r\n        );\r\n      }\r\n    }, [name, redirect]);\r\n  }\r\n\r\n  return null;\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,aAAa;AACtB,SAASC,aAAa;AAqBtB,IAAMC,eAAe,GACnB,OAAOC,MAAM,KAAK,WAAW,GAAGJ,KAAK,CAACG,eAAe,GAAG,YAAY,CAAC,CAAC;AAGxE,OAAO,SAASE,MAAMA,CAAAC,IAAA,EAII;EAAA,IAHxBC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IACJC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;IACRC,OAAO,GAAAH,IAAA,CAAPG,OAAO;EAEP,IAAMC,UAAU,GAAGR,aAAa,CAACK,IAAI,CAAC;EAEtCJ,eAAe,CAAC,YAAM;IACpB,IACEM,OAAO,IAGPE,MAAM,CAACC,IAAI,CAACH,OAAO,CAAC,CAACI,MAAM,EAC3B;MACAH,UAAU,CAACI,UAAU,CAACL,OAAO,CAAC;IAChC;EACF,CAAC,EAAE,CAACC,UAAU,EAAED,OAAO,CAAC,CAAC;EAEzB,IAAIM,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;IAE1ChB,aAAa,CACX,2GAA2G,EAC3GO,QACF,CAAC;EACH;EAEA,IAAIO,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IAEzCjB,KAAK,CAACkB,SAAS,CAAC,YAAM;MACpB,IAAIV,QAAQ,IAAI,IAAI,EAAE;QACpB,MAAM,IAAIW,KAAK,CACb,uGACF,CAAC;MACH;IACF,CAAC,EAAE,CAACZ,IAAI,EAAEC,QAAQ,CAAC,CAAC;EACtB;EAEA,OAAO,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}