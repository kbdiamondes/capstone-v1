{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useEffect } from 'react';\nimport { RestAPI } from \"../../Services/RestAPI\";\nimport { heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport CollectorCollectionList from \"./Lists/CollectorCollectionList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar indebtPerson = [{\n  fullname: 'John Doe',\n  client_id: 1\n}, {\n  fullname: 'John Doe',\n  client_id: 1\n}];\nexport default function CollectorCollection() {\n  var _RestAPI = RestAPI(),\n    _RestAPI2 = _slicedToArray(_RestAPI, 7),\n    sendRequest = _RestAPI2[0],\n    assignCollector = _RestAPI2[1],\n    loading = _RestAPI2[2],\n    error = _RestAPI2[3],\n    client_user = _RestAPI2[4],\n    reseller_user = _RestAPI2[5],\n    collector_user = _RestAPI2[6];\n  useEffect(function () {\n    sendRequest({\n      method: 'GET',\n      url: \"http://192.168.1.6:8080/client\"\n    });\n  }, []);\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.textHeader,\n      children: \"Client with Debt\"\n    }), indebtPerson.map(function (item, index) {\n      return _jsx(CollectorCollectionList, {\n        fullname: item.fullname,\n        client_id: item.client_id\n      }, index);\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: hp(2),\n    paddingHorizontal: hp(1.5)\n  },\n  textHeader: {\n    fontSize: hp(2),\n    fontWeight: 'bold',\n    color: '#9F9F9F',\n    padding: hp(1.2)\n  }\n});","map":{"version":3,"names":["React","useEffect","RestAPI","heightPercentageToDP","hp","CollectorCollectionList","jsx","_jsx","jsxs","_jsxs","indebtPerson","fullname","client_id","CollectorCollection","_RestAPI","_RestAPI2","_slicedToArray","sendRequest","assignCollector","loading","error","client_user","reseller_user","collector_user","method","url","ScrollView","style","styles","container","children","Text","textHeader","map","item","index","StyleSheet","create","flex","paddingTop","paddingHorizontal","fontSize","fontWeight","color","padding"],"sources":["D:/FOURTH YEAR SUBs/Research/collectify-front-end/src/Components/Reseller/CollectorCollection.tsx"],"sourcesContent":["import {SafeAreaView, View, Text, StyleSheet, ScrollView, FlatList} from 'react-native';\r\nimport DuePaymentList from './Lists/CollectorCollectionList';\r\n\r\nimport React, { Key, useEffect, useState } from 'react';\r\nimport { IClient, RestAPI } from '../../Services/RestAPI';\r\n\r\nimport {widthPercentageToDP as wp, heightPercentageToDP as hp} from 'react-native-responsive-screen';\r\nimport CollectorCollectionList from './Lists/CollectorCollectionList';\r\n\r\n//remove when connecting to back-end\r\nconst indebtPerson = [\r\n    {\r\n        fullname: 'John Doe', \r\n        client_id: 1\r\n    },\r\n    {\r\n        fullname: 'John Doe', \r\n        client_id: 1\r\n    }\r\n]\r\n\r\nexport default function CollectorCollection(){\r\n    const [sendRequest, assignCollector, loading, error,client_user, reseller_user, collector_user] = RestAPI(); \r\n\r\n    useEffect(() => {\r\n        sendRequest({ \r\n            method: 'GET', \r\n            url: \"http://192.168.1.6:8080/client\"\r\n        })\r\n    },[] )\r\n\r\n    return(\r\n\r\n        <ScrollView style={styles.container}>\r\n                <Text style={styles.textHeader} >Client with Debt</Text>\r\n                {\r\n                    indebtPerson.map((item, index)=>{\r\n                        return <CollectorCollectionList key={index} fullname={item.fullname} client_id={item.client_id}/>\r\n                    })\r\n                }    \r\n        </ScrollView>\r\n\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex:1 ,\r\n        paddingTop: hp(2), \r\n        paddingHorizontal: hp(1.5)\r\n    }, \r\n    textHeader:{\r\n        fontSize: hp(2),\r\n        fontWeight: 'bold', \r\n        color: '#9F9F9F',\r\n        padding: hp(1.2)\r\n    }\r\n});\r\n\r\n\r\n\r\n/* WORKING\r\n                <FlatList\r\n                    data={client_user}\r\n                    keyExtractor={(client: IClient) => client.client_id.toString()}\r\n                    renderItem={({ item: client }) => (\r\n                        <SendCollectorsList\r\n                        client_id={client.client_id}\r\n                        fullname={client.fullName}\r\n                        />\r\n                    )}\r\n                />\r\n\r\n*/\r\n                /*\r\n                {\r\n                    client_user?.map((client:IClient)=>{\r\n                        return <SendCollectorsList client_id={client.client_id} fullname={client.fullName}/>\r\n                    })\r\n                }\r\n                */\r\n/*\r\n                {\r\n                    indebtPerson.map((item, index)=>{\r\n                        return <SendCollectorsList key={index} personName={item.personName} itemCollectible={item.itemCollectibles}/>\r\n                    })\r\n                }\r\n*/\r\n\r\n\r\n\r\n/*\r\nPRE-RESPONSIVE DESIGN\r\n\r\n        <SafeAreaView>\r\n            <View style={styles.container}>\r\n                <Text style={styles.textHeader} >Assign Collectors</Text>\r\n                <FlatList\r\n                    data={client_user}\r\n                    keyExtractor={(client: IClient) => client.client_id.toString()}\r\n                    renderItem={({ item: client }) => (\r\n                        <SendCollectorsList client_id={client.client_id} fullname={client.fullName} />\r\n\r\n                    )}\r\n                />\r\n            </View>       \r\n        </SafeAreaView>\r\n\r\n\r\n    */"],"mappings":";;;;AAGA,OAAOA,KAAK,IAASC,SAAS,QAAkB,OAAO;AACvD,SAAkBC,OAAO;AAEzB,SAAmCC,oBAAoB,IAAIC,EAAE,QAAO,gCAAgC;AACpG,OAAOC,uBAAuB;AAAwC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGtE,IAAMC,YAAY,GAAG,CACjB;EACIC,QAAQ,EAAE,UAAU;EACpBC,SAAS,EAAE;AACf,CAAC,EACD;EACID,QAAQ,EAAE,UAAU;EACpBC,SAAS,EAAE;AACf,CAAC,CACJ;AAED,eAAe,SAASC,mBAAmBA,CAAA,EAAE;EACzC,IAAAC,QAAA,GAAkGZ,OAAO,CAAC,CAAC;IAAAa,SAAA,GAAAC,cAAA,CAAAF,QAAA;IAApGG,WAAW,GAAAF,SAAA;IAAEG,eAAe,GAAAH,SAAA;IAAEI,OAAO,GAAAJ,SAAA;IAAEK,KAAK,GAAAL,SAAA;IAACM,WAAW,GAAAN,SAAA;IAAEO,aAAa,GAAAP,SAAA;IAAEQ,cAAc,GAAAR,SAAA;EAE9Fd,SAAS,CAAC,YAAM;IACZgB,WAAW,CAAC;MACRO,MAAM,EAAE,KAAK;MACbC,GAAG,EAAE;IACT,CAAC,CAAC;EACN,CAAC,EAAC,EAAG,CAAC;EAEN,OAEIhB,KAAA,CAACiB,UAAU;IAACC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BvB,IAAA,CAACwB,IAAI;MAACJ,KAAK,EAAEC,MAAM,CAACI,UAAW;MAAAF,QAAA,EAAE;IAAgB,CAAM,CAAC,EAEpDpB,YAAY,CAACuB,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK,EAAG;MAC5B,OAAO5B,IAAA,CAACF,uBAAuB;QAAaM,QAAQ,EAAEuB,IAAI,CAACvB,QAAS;QAACC,SAAS,EAAEsB,IAAI,CAACtB;MAAU,GAA1DuB,KAA2D,CAAC;IACrG,CAAC,CAAC;EAAA,CAEF,CAAC;AAGrB;AAEA,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAM,CAAC;EAC7BR,SAAS,EAAC;IACNS,IAAI,EAAC,CAAC;IACNC,UAAU,EAAEnC,EAAE,CAAC,CAAC,CAAC;IACjBoC,iBAAiB,EAAEpC,EAAE,CAAC,GAAG;EAC7B,CAAC;EACD4B,UAAU,EAAC;IACPS,QAAQ,EAAErC,EAAE,CAAC,CAAC,CAAC;IACfsC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE,SAAS;IAChBC,OAAO,EAAExC,EAAE,CAAC,GAAG;EACnB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}