{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"wrapper\"];\nvar _Constants$expoConfig, _Constants$expoConfig2, _Constants$expoConfig3;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport Constants from \"expo-constants\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { Fragment } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport UpstreamNavigationContainer from \"./fork/NavigationContainer\";\nimport { useInitializeExpoRouter } from \"./global-state/router-store\";\nimport { SplashScreen } from \"./views/Splash\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction getGestureHandlerRootView() {\n  try {\n    var _ref = require(\"react-native-gesture-handler\"),\n      _GestureHandlerRootView = _ref.GestureHandlerRootView;\n    if (!_GestureHandlerRootView) {\n      return React.Fragment;\n    }\n    function GestureHandler(props) {\n      return _jsx(_GestureHandlerRootView, _objectSpread({\n        style: {\n          flex: 1\n        }\n      }, props));\n    }\n    if (process.env.NODE_ENV === \"development\") {\n      GestureHandler.displayName = \"GestureHandlerRootView\";\n    }\n    return GestureHandler;\n  } catch (_unused) {\n    return React.Fragment;\n  }\n}\nvar GestureHandlerRootView = getGestureHandlerRootView();\nvar INITIAL_METRICS = {\n  frame: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  insets: {\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n};\nvar hasViewControllerBasedStatusBarAppearance = Platform.OS === \"ios\" && !!((_Constants$expoConfig = Constants.expoConfig) != null && (_Constants$expoConfig2 = _Constants$expoConfig.ios) != null && (_Constants$expoConfig3 = _Constants$expoConfig2.infoPlist) != null && _Constants$expoConfig3.UIViewControllerBasedStatusBarAppearance);\nexport function ExpoRoot(_ref2) {\n  var _ref2$wrapper = _ref2.wrapper,\n    ParentWrapper = _ref2$wrapper === void 0 ? Fragment : _ref2$wrapper,\n    props = _objectWithoutProperties(_ref2, _excluded);\n  var wrapper = function wrapper(_ref3) {\n    var children = _ref3.children;\n    return _jsx(ParentWrapper, {\n      children: _jsx(GestureHandlerRootView, {\n        children: _jsxs(SafeAreaProvider, {\n          initialMetrics: INITIAL_METRICS,\n          children: [children, !hasViewControllerBasedStatusBarAppearance && _jsx(StatusBar, {\n            style: \"auto\"\n          })]\n        })\n      })\n    });\n  };\n  return _jsx(ContextNavigator, _objectSpread(_objectSpread({}, props), {}, {\n    wrapper: wrapper\n  }));\n}\nvar initialUrl = Platform.OS === \"web\" && typeof window !== \"undefined\" ? new URL(window.location.href) : undefined;\nfunction ContextNavigator(_ref4) {\n  var context = _ref4.context,\n    _ref4$location = _ref4.location,\n    initialLocation = _ref4$location === void 0 ? initialUrl : _ref4$location,\n    _ref4$wrapper = _ref4.wrapper,\n    WrapperComponent = _ref4$wrapper === void 0 ? Fragment : _ref4$wrapper;\n  var store = useInitializeExpoRouter(context, initialLocation);\n  if (store.shouldShowTutorial()) {\n    SplashScreen.hideAsync();\n    if (process.env.NODE_ENV === \"development\") {\n      var Tutorial = require(\"./onboard/Tutorial\").Tutorial;\n      return _jsx(WrapperComponent, {\n        children: _jsx(Tutorial, {})\n      });\n    } else {\n      return null;\n    }\n  }\n  var Component = store.rootComponent;\n  return _jsx(UpstreamNavigationContainer, {\n    ref: store.navigationRef,\n    initialState: store.initialState,\n    linking: store.linking,\n    documentTitle: {\n      enabled: false\n    },\n    children: _jsx(WrapperComponent, {\n      children: _jsx(Component, {})\n    })\n  });\n}","map":{"version":3,"names":["Constants","StatusBar","React","Fragment","Platform","SafeAreaProvider","UpstreamNavigationContainer","useInitializeExpoRouter","SplashScreen","jsx","_jsx","jsxs","_jsxs","getGestureHandlerRootView","_ref","require","GestureHandlerRootView","GestureHandler","props","_GestureHandlerRootView","_objectSpread","style","flex","process","env","NODE_ENV","displayName","_unused","INITIAL_METRICS","frame","x","y","width","height","insets","top","left","right","bottom","hasViewControllerBasedStatusBarAppearance","OS","_Constants$expoConfig","expoConfig","_Constants$expoConfig2","ios","_Constants$expoConfig3","infoPlist","UIViewControllerBasedStatusBarAppearance","ExpoRoot","_ref2","_ref2$wrapper","wrapper","ParentWrapper","_objectWithoutProperties","_excluded","_ref3","children","initialMetrics","ContextNavigator","initialUrl","window","URL","location","href","undefined","_ref4","context","_ref4$location","initialLocation","_ref4$wrapper","WrapperComponent","store","shouldShowTutorial","hideAsync","Tutorial","Component","rootComponent","ref","navigationRef","initialState","linking","documentTitle","enabled"],"sources":["C:/Users/User/Documents/GitHub/Capstone/collectify/collectify-front-end/node_modules/expo-router/src/ExpoRoot.tsx"],"sourcesContent":["import Constants from \"expo-constants\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport React, { FunctionComponent, ReactNode, Fragment } from \"react\";\r\nimport { Platform } from \"react-native\";\r\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\r\n\r\nimport UpstreamNavigationContainer from \"./fork/NavigationContainer\";\r\nimport { useInitializeExpoRouter } from \"./global-state/router-store\";\r\nimport { RequireContext } from \"./types\";\r\nimport { SplashScreen } from \"./views/Splash\";\r\n\r\nexport type ExpoRootProps = {\r\n  context: RequireContext;\r\n  location?: URL;\r\n  wrapper?: FunctionComponent<{ children: ReactNode }>;\r\n};\r\n\r\nfunction getGestureHandlerRootView() {\r\n  try {\r\n    const { GestureHandlerRootView } =\r\n      require(\"react-native-gesture-handler\") as typeof import(\"react-native-gesture-handler\");\r\n\r\n    if (!GestureHandlerRootView) {\r\n      return React.Fragment;\r\n    }\r\n\r\n    // eslint-disable-next-line no-inner-declarations\r\n    function GestureHandler(props: any) {\r\n      return <GestureHandlerRootView style={{ flex: 1 }} {...props} />;\r\n    }\r\n    if (process.env.NODE_ENV === \"development\") {\r\n      // @ts-expect-error\r\n      GestureHandler.displayName = \"GestureHandlerRootView\";\r\n    }\r\n    return GestureHandler;\r\n  } catch {\r\n    return React.Fragment;\r\n  }\r\n}\r\n\r\nconst GestureHandlerRootView = getGestureHandlerRootView();\r\n\r\nconst INITIAL_METRICS = {\r\n  frame: { x: 0, y: 0, width: 0, height: 0 },\r\n  insets: { top: 0, left: 0, right: 0, bottom: 0 },\r\n};\r\n\r\nconst hasViewControllerBasedStatusBarAppearance =\r\n  Platform.OS === \"ios\" &&\r\n  !!Constants.expoConfig?.ios?.infoPlist\r\n    ?.UIViewControllerBasedStatusBarAppearance;\r\n\r\nexport function ExpoRoot({\r\n  wrapper: ParentWrapper = Fragment,\r\n  ...props\r\n}: ExpoRootProps) {\r\n  /*\r\n   * Due to static rendering we need to wrap these top level views in second wrapper\r\n   * View's like <GestureHandlerRootView /> generate a <div> so if the parent wrapper\r\n   * is a HTML document, we need to ensure its inside the <body>\r\n   */\r\n  const wrapper: ExpoRootProps[\"wrapper\"] = ({ children }) => {\r\n    return (\r\n      <ParentWrapper>\r\n        <GestureHandlerRootView>\r\n          <SafeAreaProvider\r\n            // SSR support\r\n            initialMetrics={INITIAL_METRICS}\r\n          >\r\n            {children}\r\n\r\n            {/* Users can override this by adding another StatusBar element anywhere higher in the component tree. */}\r\n            {!hasViewControllerBasedStatusBarAppearance && (\r\n              <StatusBar style=\"auto\" />\r\n            )}\r\n          </SafeAreaProvider>\r\n        </GestureHandlerRootView>\r\n      </ParentWrapper>\r\n    );\r\n  };\r\n\r\n  return <ContextNavigator {...props} wrapper={wrapper} />;\r\n}\r\n\r\nconst initialUrl =\r\n  Platform.OS === \"web\" && typeof window !== \"undefined\"\r\n    ? new URL(window.location.href)\r\n    : undefined;\r\n\r\nfunction ContextNavigator({\r\n  context,\r\n  location: initialLocation = initialUrl,\r\n  wrapper: WrapperComponent = Fragment,\r\n}: ExpoRootProps) {\r\n  const store = useInitializeExpoRouter(context, initialLocation);\r\n\r\n  if (store.shouldShowTutorial()) {\r\n    SplashScreen.hideAsync();\r\n    if (process.env.NODE_ENV === \"development\") {\r\n      const Tutorial = require(\"./onboard/Tutorial\").Tutorial;\r\n      return (\r\n        <WrapperComponent>\r\n          <Tutorial />\r\n        </WrapperComponent>\r\n      );\r\n    } else {\r\n      // Ensure tutorial styles are stripped in production.\r\n      return null;\r\n    }\r\n  }\r\n\r\n  const Component = store.rootComponent;\r\n\r\n  return (\r\n    <UpstreamNavigationContainer\r\n      ref={store.navigationRef}\r\n      initialState={store.initialState}\r\n      linking={store.linking}\r\n      documentTitle={{\r\n        enabled: false,\r\n      }}\r\n    >\r\n      <WrapperComponent>\r\n        <Component />\r\n      </WrapperComponent>\r\n    </UpstreamNavigationContainer>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}