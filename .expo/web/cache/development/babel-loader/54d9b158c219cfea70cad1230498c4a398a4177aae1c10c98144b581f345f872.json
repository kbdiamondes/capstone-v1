{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Pressable, StyleSheet, Text, View } from \"@bacons/react-views\";\nimport { LogContext } from \"@expo/metro-runtime/build/error-overlay/Data/LogContext\";\nimport { LogBoxInspectorStackFrames } from \"@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrames\";\nimport { LogBoxLog, parseErrorStack } from \"@expo/metro-runtime/symbolicate\";\nimport { BottomTabBarHeightContext } from \"@react-navigation/bottom-tabs\";\nimport React from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { Link } from \"../link/Link\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction useMetroSymbolication(error) {\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    logBoxLog = _React$useState2[0],\n    setLogBoxLog = _React$useState2[1];\n  React.useEffect(function () {\n    var isMounted = true;\n    var stack = parseErrorStack(error.stack);\n    var log = new LogBoxLog({\n      level: \"error\",\n      message: {\n        content: error.message,\n        substitutions: []\n      },\n      isComponentError: false,\n      stack: stack,\n      category: error.message,\n      componentStack: []\n    });\n    log.symbolicate(\"stack\", function (symbolicatedLog) {\n      if (isMounted) {\n        setLogBoxLog(log);\n      }\n    });\n    return function () {\n      isMounted = false;\n    };\n  }, [error]);\n  return logBoxLog;\n}\nexport function ErrorBoundary(_ref) {\n  var error = _ref.error,\n    retry = _ref.retry;\n  var logBoxLog = useMetroSymbolication(error);\n  var inTabBar = React.useContext(BottomTabBarHeightContext);\n  var Wrapper = inTabBar ? View : SafeAreaView;\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(Wrapper, {\n      style: {\n        flex: 1,\n        gap: 8,\n        maxWidth: 720,\n        marginHorizontal: \"auto\"\n      },\n      children: [_jsx(View, {\n        style: {\n          marginBottom: 12,\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        },\n        children: _jsx(Text, {\n          role: \"heading\",\n          \"aria-level\": 1,\n          style: styles.title,\n          children: \"Something went wrong\"\n        })\n      }), _jsx(StackTrace, {\n        logData: logBoxLog\n      }), process.env.NODE_ENV === \"development\" && _jsx(Link, {\n        href: \"/_sitemap\",\n        style: styles.link,\n        children: \"Sitemap\"\n      }), _jsx(Pressable, {\n        onPress: retry,\n        children: function children(_ref2) {\n          var hovered = _ref2.hovered,\n            pressed = _ref2.pressed;\n          return _jsx(View, {\n            style: [styles.buttonInner, (hovered || pressed) && {\n              backgroundColor: \"white\"\n            }],\n            children: _jsx(Text, {\n              style: [styles.buttonText, {\n                transitionDuration: \"100ms\",\n                color: hovered || pressed ? \"black\" : \"white\"\n              }],\n              children: \"Retry\"\n            })\n          });\n        }\n      })]\n    })\n  });\n}\nfunction StackTrace(_ref3) {\n  var _logData$symbolicated, _logData$symbolicated2;\n  var logData = _ref3.logData;\n  if (!(logData != null && (_logData$symbolicated = logData.symbolicated) != null && (_logData$symbolicated2 = _logData$symbolicated.stack) != null && _logData$symbolicated2.stack)) {\n    return null;\n  }\n  return _jsx(ScrollView, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(LogContext.Provider, {\n      value: {\n        isDisabled: false,\n        logs: [logData],\n        selectedLogIndex: 0\n      },\n      children: _jsx(LogBoxInspectorStackFrames, {\n        onRetry: function onRetry() {},\n        type: \"stack\"\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"black\",\n    padding: 24,\n    alignItems: \"stretch\",\n    justifyContent: \"center\"\n  },\n  title: {\n    color: \"white\",\n    fontSize: Platform.select({\n      web: 32,\n      default: 24\n    }),\n    fontWeight: \"bold\"\n  },\n  buttonText: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"black\"\n  },\n  buttonInner: {\n    transitionDuration: \"100ms\",\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderColor: \"white\",\n    borderWidth: 2,\n    marginLeft: 8,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  code: {\n    fontFamily: Platform.select({\n      default: \"Courier\",\n      ios: \"Courier New\",\n      android: \"monospace\"\n    }),\n    fontWeight: \"500\"\n  },\n  subtitle: {\n    color: \"white\",\n    fontSize: 14,\n    marginBottom: 12\n  },\n  link: {\n    color: \"rgba(255,255,255,0.4)\",\n    textDecorationStyle: \"solid\",\n    textDecorationLine: \"underline\",\n    fontSize: 14,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"names":["Pressable","StyleSheet","Text","View","LogContext","LogBoxInspectorStackFrames","LogBoxLog","parseErrorStack","BottomTabBarHeightContext","React","Platform","ScrollView","SafeAreaView","Link","jsx","_jsx","jsxs","_jsxs","useMetroSymbolication","error","_React$useState","useState","_React$useState2","_slicedToArray","logBoxLog","setLogBoxLog","useEffect","isMounted","stack","log","level","message","content","substitutions","isComponentError","category","componentStack","symbolicate","symbolicatedLog","ErrorBoundary","_ref","retry","inTabBar","useContext","Wrapper","style","styles","container","children","flex","gap","maxWidth","marginHorizontal","marginBottom","flexDirection","flexWrap","justifyContent","alignItems","role","title","StackTrace","logData","process","env","NODE_ENV","href","link","onPress","_ref2","hovered","pressed","buttonInner","backgroundColor","buttonText","transitionDuration","color","_ref3","_logData$symbolicated","_logData$symbolicated2","symbolicated","Provider","value","isDisabled","logs","selectedLogIndex","onRetry","type","create","padding","fontSize","select","web","default","fontWeight","paddingVertical","paddingHorizontal","borderColor","borderWidth","marginLeft","code","fontFamily","ios","android","subtitle","textDecorationStyle","textDecorationLine","textAlign"],"sources":["C:/Users/acer/Documents/GitHub/collectify-front-end/node_modules/expo-router/src/views/ErrorBoundary.tsx"],"sourcesContent":["import { Pressable, StyleSheet, Text, View } from \"@bacons/react-views\";\r\nimport { LogContext } from \"@expo/metro-runtime/build/error-overlay/Data/LogContext\";\r\nimport { LogBoxInspectorStackFrames } from \"@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrames\";\r\nimport { LogBoxLog, parseErrorStack } from \"@expo/metro-runtime/symbolicate\";\r\nimport { BottomTabBarHeightContext } from \"@react-navigation/bottom-tabs\";\r\nimport React from \"react\";\r\nimport { Platform, ScrollView } from \"react-native\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\n\r\nimport { Link } from \"../link/Link\";\r\nimport { ErrorBoundaryProps } from \"./Try\";\r\n\r\nfunction useMetroSymbolication(error: Error) {\r\n  const [logBoxLog, setLogBoxLog] = React.useState<LogBoxLog | null>(null);\r\n\r\n  React.useEffect(() => {\r\n    let isMounted = true;\r\n    const stack = parseErrorStack(error.stack);\r\n\r\n    const log = new LogBoxLog({\r\n      level: \"error\",\r\n      message: {\r\n        content: error.message,\r\n        substitutions: [],\r\n      },\r\n      isComponentError: false,\r\n      stack,\r\n      category: error.message,\r\n      componentStack: [],\r\n    });\r\n\r\n    log.symbolicate(\"stack\", (symbolicatedLog) => {\r\n      if (isMounted) {\r\n        setLogBoxLog(log);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [error]);\r\n\r\n  return logBoxLog;\r\n}\r\n\r\nexport function ErrorBoundary({ error, retry }: ErrorBoundaryProps) {\r\n  const logBoxLog = useMetroSymbolication(error);\r\n  const inTabBar = React.useContext(BottomTabBarHeightContext);\r\n  const Wrapper = inTabBar ? View : SafeAreaView;\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Wrapper\r\n        style={{ flex: 1, gap: 8, maxWidth: 720, marginHorizontal: \"auto\" }}\r\n      >\r\n        <View\r\n          style={{\r\n            marginBottom: 12,\r\n            flexDirection: \"row\",\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Text role=\"heading\" aria-level={1} style={styles.title}>\r\n            Something went wrong\r\n          </Text>\r\n        </View>\r\n\r\n        <StackTrace logData={logBoxLog} />\r\n        {process.env.NODE_ENV === \"development\" && (\r\n          <Link href=\"/_sitemap\" style={styles.link}>\r\n            Sitemap\r\n          </Link>\r\n        )}\r\n        <Pressable onPress={retry}>\r\n          {({ hovered, pressed }) => (\r\n            <View\r\n              style={[\r\n                styles.buttonInner,\r\n                (hovered || pressed) && { backgroundColor: \"white\" },\r\n              ]}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.buttonText,\r\n                  {\r\n                    transitionDuration: \"100ms\",\r\n                    color: hovered || pressed ? \"black\" : \"white\",\r\n                  },\r\n                ]}\r\n              >\r\n                Retry\r\n              </Text>\r\n            </View>\r\n          )}\r\n        </Pressable>\r\n      </Wrapper>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction StackTrace({ logData }: { logData: LogBoxLog | null }) {\r\n  if (!logData?.symbolicated?.stack?.stack) {\r\n    return null;\r\n  }\r\n  return (\r\n    <ScrollView style={{ flex: 1 }}>\r\n      <LogContext.Provider\r\n        value={{\r\n          isDisabled: false,\r\n          logs: [logData],\r\n          selectedLogIndex: 0,\r\n        }}\r\n      >\r\n        <LogBoxInspectorStackFrames onRetry={function () {}} type=\"stack\" />\r\n      </LogContext.Provider>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"black\",\r\n    padding: 24,\r\n    alignItems: \"stretch\",\r\n    justifyContent: \"center\",\r\n  },\r\n  title: {\r\n    color: \"white\",\r\n    fontSize: Platform.select({ web: 32, default: 24 }),\r\n    fontWeight: \"bold\",\r\n  },\r\n  buttonText: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    color: \"black\",\r\n  },\r\n  buttonInner: {\r\n    transitionDuration: \"100ms\",\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n    borderColor: \"white\",\r\n    borderWidth: 2,\r\n    marginLeft: 8,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  code: {\r\n    fontFamily: Platform.select({\r\n      default: \"Courier\",\r\n      ios: \"Courier New\",\r\n      android: \"monospace\",\r\n    }),\r\n    fontWeight: \"500\",\r\n  },\r\n  subtitle: {\r\n    color: \"white\",\r\n    fontSize: 14,\r\n    marginBottom: 12,\r\n    // textAlign: \"center\",\r\n  },\r\n  link: {\r\n    color: \"rgba(255,255,255,0.4)\",\r\n    textDecorationStyle: \"solid\",\r\n    textDecorationLine: \"underline\",\r\n    fontSize: 14,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}