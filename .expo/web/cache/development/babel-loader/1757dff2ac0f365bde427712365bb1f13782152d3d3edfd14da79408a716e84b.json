{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nimport { useExpoRouter } from \"../global-state/router-store\";\nimport { stripGroupSegmentsFromPath } from \"../matchers\";\nfunction eventShouldPreventDefault(e) {\n  if (e != null && e.defaultPrevented) {\n    return false;\n  }\n  if (\"button\" in e && !e.metaKey && !e.altKey && !e.ctrlKey && !e.shiftKey && (e.button == null || e.button === 0) && [undefined, null, \"\", \"self\"].includes(e.currentTarget.target)) {\n    return true;\n  }\n  return false;\n}\nexport default function useLinkToPathProps(props) {\n  var _useExpoRouter = useExpoRouter(),\n    linkTo = _useExpoRouter.linkTo;\n  var onPress = function onPress(e) {\n    var shouldHandle = false;\n    if (Platform.OS !== \"web\" || !e) {\n      shouldHandle = e ? !e.defaultPrevented : true;\n    } else if (eventShouldPreventDefault(e)) {\n      e.preventDefault();\n      shouldHandle = true;\n    }\n    if (shouldHandle) {\n      linkTo(props.href, props.replace ? \"REPLACE\" : undefined);\n    }\n  };\n  return {\n    href: stripGroupSegmentsFromPath(props.href) || \"/\",\n    accessibilityRole: \"link\",\n    onPress: onPress\n  };\n}","map":{"version":3,"names":["useExpoRouter","stripGroupSegmentsFromPath","eventShouldPreventDefault","e","defaultPrevented","metaKey","altKey","ctrlKey","shiftKey","button","undefined","includes","currentTarget","target","useLinkToPathProps","props","_useExpoRouter","linkTo","onPress","shouldHandle","Platform","OS","preventDefault","href","replace","accessibilityRole"],"sources":["C:/Users/User/Documents/GitHub/Capstone/collectify/collectify-front-end/node_modules/expo-router/src/link/useLinkToPathProps.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { GestureResponderEvent, Platform } from \"react-native\";\r\n\r\nimport { useExpoRouter } from \"../global-state/router-store\";\r\nimport { stripGroupSegmentsFromPath } from \"../matchers\";\r\n\r\nfunction eventShouldPreventDefault(\r\n  e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\r\n): boolean {\r\n  if (e?.defaultPrevented) {\r\n    return false;\r\n  }\r\n\r\n  if (\r\n    // Only check MouseEvents\r\n    \"button\" in e &&\r\n    // ignore clicks with modifier keys\r\n    !e.metaKey &&\r\n    !e.altKey &&\r\n    !e.ctrlKey &&\r\n    !e.shiftKey &&\r\n    (e.button == null || e.button === 0) && // Only accept left clicks\r\n    [undefined, null, \"\", \"self\"].includes(e.currentTarget.target) // let browser handle \"target=_blank\" etc.\r\n  ) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport default function useLinkToPathProps(props: {\r\n  href: string;\r\n  replace?: boolean;\r\n}) {\r\n  const { linkTo } = useExpoRouter();\r\n\r\n  const onPress = (\r\n    e?: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\r\n  ) => {\r\n    let shouldHandle = false;\r\n\r\n    if (Platform.OS !== \"web\" || !e) {\r\n      shouldHandle = e ? !e.defaultPrevented : true;\r\n    } else if (eventShouldPreventDefault(e)) {\r\n      e.preventDefault();\r\n      shouldHandle = true;\r\n    }\r\n\r\n    if (shouldHandle) {\r\n      linkTo(props.href, props.replace ? \"REPLACE\" : undefined);\r\n    }\r\n  };\r\n\r\n  return {\r\n    // Ensure there's always a value for href\r\n    href: stripGroupSegmentsFromPath(props.href) || \"/\",\r\n    accessibilityRole: \"link\" as const,\r\n    onPress,\r\n  };\r\n}\r\n"],"mappings":";AAGA,SAASA,aAAa;AACtB,SAASC,0BAA0B;AAEnC,SAASC,yBAAyBA,CAChCC,CAA0E,EACjE;EACT,IAAIA,CAAC,YAADA,CAAC,CAAEC,gBAAgB,EAAE;IACvB,OAAO,KAAK;EACd;EAEA,IAEE,QAAQ,IAAID,CAAC,IAEb,CAACA,CAAC,CAACE,OAAO,IACV,CAACF,CAAC,CAACG,MAAM,IACT,CAACH,CAAC,CAACI,OAAO,IACV,CAACJ,CAAC,CAACK,QAAQ,KACVL,CAAC,CAACM,MAAM,IAAI,IAAI,IAAIN,CAAC,CAACM,MAAM,KAAK,CAAC,CAAC,IACpC,CAACC,SAAS,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,CAAC,CAACC,QAAQ,CAACR,CAAC,CAACS,aAAa,CAACC,MAAM,CAAC,EAC9D;IACA,OAAO,IAAI;EACb;EAEA,OAAO,KAAK;AACd;AAEA,eAAe,SAASC,kBAAkBA,CAACC,KAG1C,EAAE;EACD,IAAAC,cAAA,GAAmBhB,aAAa,CAAC,CAAC;IAA1BiB,MAAM,GAAAD,cAAA,CAANC,MAAM;EAEd,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CACXf,CAA2E,EACxE;IACH,IAAIgB,YAAY,GAAG,KAAK;IAExB,IAAIC,QAAQ,CAACC,EAAE,KAAK,KAAK,IAAI,CAAClB,CAAC,EAAE;MAC/BgB,YAAY,GAAGhB,CAAC,GAAG,CAACA,CAAC,CAACC,gBAAgB,GAAG,IAAI;IAC/C,CAAC,MAAM,IAAIF,yBAAyB,CAACC,CAAC,CAAC,EAAE;MACvCA,CAAC,CAACmB,cAAc,CAAC,CAAC;MAClBH,YAAY,GAAG,IAAI;IACrB;IAEA,IAAIA,YAAY,EAAE;MAChBF,MAAM,CAACF,KAAK,CAACQ,IAAI,EAAER,KAAK,CAACS,OAAO,GAAG,SAAS,GAAGd,SAAS,CAAC;IAC3D;EACF,CAAC;EAED,OAAO;IAELa,IAAI,EAAEtB,0BAA0B,CAACc,KAAK,CAACQ,IAAI,CAAC,IAAI,GAAG;IACnDE,iBAAiB,EAAE,MAAe;IAClCP,OAAO,EAAPA;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}